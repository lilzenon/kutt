{{> header}}

<link rel="stylesheet" href="/css/drop-edit.css">

<div class="drop-edit-container">
    <div class="drop-edit-header">
        <div class="header-content">
            <button type="button" class="back-button" onclick="window.history.back()">
                {{> icons/arrow_left}}
                <span>Back</span>
            </button>
            <h1>Edit Drop</h1>
        </div>
    </div>

    <div class="drop-edit-content">
        <div class="drop-edit-form-container">
            <form id="drop-edit-form" class="drop-form">
                <!-- Basic Information -->
                <div class="form-section">
                    <h2>Basic Information</h2>

                    <div class="form-group">
                        <label for="edit-title">Title *</label>
                        <input type="text" id="edit-title" name="title" required maxlength="255"
                               value="{{drop.title}}" placeholder="Enter drop title">
                    </div>

                    <div class="form-group">
                        <label for="edit-description">Description</label>
                        <textarea id="edit-description" name="description" rows="4"
                                  placeholder="Describe what this drop is about">{{drop.description}}</textarea>
                    </div>

                    <div class="form-group">
                        <label for="edit-slug">URL Slug</label>
                        <div class="slug-input-wrapper">
                            <span class="slug-prefix">{{domain}}/drop/</span>
                            <input type="text" id="edit-slug" name="slug" maxlength="100"
                                   value="{{drop.slug}}" placeholder="my-drop">
                        </div>
                        <small class="form-help">This will be your drop's public URL</small>
                    </div>
                </div>

                <!-- Appearance -->
                <div class="form-section">
                    <h2>Appearance</h2>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="edit-background-color">Background Color</label>
                            <input type="color" id="edit-background-color" name="background_color"
                                   value="{{drop.background_color}}">
                        </div>

                        <div class="form-group">
                            <label for="edit-text-color">Text Color</label>
                            <input type="color" id="edit-text-color" name="text_color"
                                   value="{{drop.text_color}}">
                        </div>

                        <div class="form-group">
                            <label for="edit-button-color">Button Color</label>
                            <input type="color" id="edit-button-color" name="button_color"
                                   value="{{drop.button_color}}">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="edit-button-text">Button Text</label>
                        <input type="text" id="edit-button-text" name="button_text" maxlength="50"
                               value="{{drop.button_text}}" placeholder="Get Notified">
                    </div>

                    <div class="form-group">
                        <label for="edit-cover-image">Cover Image URL</label>
                        <input type="url" id="edit-cover-image" name="cover_image"
                               value="{{drop.cover_image}}" placeholder="https://example.com/image.jpg">
                        <small class="form-help">Optional: Add a cover image for your drop</small>
                    </div>
                </div>

                <!-- Settings -->
                <div class="form-section">
                    <h2>Settings</h2>

                    <div class="form-group">
                        <div class="checkbox-group">
                            <label class="checkbox-label">
                                <input type="checkbox" name="is_active" {{#if drop.is_active}}checked{{/if}}>
                                <span class="checkbox-custom"></span>
                                <span class="checkbox-text">Active (visible to public)</span>
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="checkbox-group">
                            <label class="checkbox-label">
                                <input type="checkbox" name="collect_email" {{#if drop.collect_email}}checked{{/if}}>
                                <span class="checkbox-custom"></span>
                                <span class="checkbox-text">Collect email addresses</span>
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="checkbox-group">
                            <label class="checkbox-label">
                                <input type="checkbox" name="collect_phone" {{#if drop.collect_phone}}checked{{/if}}>
                                <span class="checkbox-custom"></span>
                                <span class="checkbox-text">Collect phone numbers</span>
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="edit-thank-you-message">Thank You Message</label>
                        <textarea id="edit-thank-you-message" name="thank_you_message" rows="3"
                                  placeholder="Thank you for signing up! You'll be notified when this drop goes live.">{{drop.thank_you_message}}</textarea>
                        <small class="form-help">Message shown after successful signup</small>
                    </div>
                </div>

                <!-- Actions -->
                <div class="form-actions">
                    <button type="button" class="button secondary" onclick="window.history.back()">
                        Cancel
                    </button>
                    <button type="submit" class="button primary">
                        <span class="button-text">Save Changes</span>
                        <span class="button-spinner" style="display: none;">
                            {{> icons/spinner}}
                        </span>
                    </button>
                </div>
            </form>
        </div>

        <!-- Preview Panel -->
        <div class="drop-preview-panel">
            <h3>Preview</h3>
            <div class="preview-container">
                <div class="preview-drop" id="drop-preview">
                    <div class="preview-header">
                        <h4 id="preview-title">{{drop.title}}</h4>
                        <p id="preview-description">{{drop.description}}</p>
                    </div>
                    <div class="preview-form">
                        <input type="email" placeholder="Enter your email" readonly>
                        <button type="button" id="preview-button" style="background-color: {{drop.button_color}};">
                            <span id="preview-button-text">{{drop.button_text}}</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="edit-error" class="error-message" style="display: none;"></div>
<div id="edit-success" class="success-message" style="display: none;"></div>

{{> footer}}

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('drop-edit-form');
    const dropId = '{{drop.id}}';

    // Real-time preview updates
    const titleInput = document.getElementById('edit-title');
    const descriptionInput = document.getElementById('edit-description');
    const buttonTextInput = document.getElementById('edit-button-text');
    const buttonColorInput = document.getElementById('edit-button-color');

    const previewTitle = document.getElementById('preview-title');
    const previewDescription = document.getElementById('preview-description');
    const previewButton = document.getElementById('preview-button');
    const previewButtonText = document.getElementById('preview-button-text');

    titleInput.addEventListener('input', () => {
        previewTitle.textContent = titleInput.value || 'Drop Title';
    });

    descriptionInput.addEventListener('input', () => {
        previewDescription.textContent = descriptionInput.value || 'Drop description';
    });

    buttonTextInput.addEventListener('input', () => {
        previewButtonText.textContent = buttonTextInput.value || 'Get Notified';
    });

    buttonColorInput.addEventListener('input', () => {
        previewButton.style.backgroundColor = buttonColorInput.value;
    });

    // Form submission
    form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(this);
        const data = Object.fromEntries(formData.entries());

        // Convert checkboxes to booleans
        data.is_active = formData.has('is_active');
        data.collect_email = formData.has('collect_email');
        data.collect_phone = formData.has('collect_phone');

        const submitBtn = this.querySelector('button[type="submit"]');
        const buttonText = submitBtn.querySelector('.button-text');
        const buttonSpinner = submitBtn.querySelector('.button-spinner');

        // Show loading state
        submitBtn.disabled = true;
        buttonText.style.display = 'none';
        buttonSpinner.style.display = 'inline-flex';

        try {
            const response = await fetch(`/api/drops/${dropId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();

            if (response.ok) {
                showSuccess('Drop updated successfully!');
                setTimeout(() => {
                    window.location.href = '/';
                }, 1500);
            } else {
                showError(result.message || 'Failed to update drop');
            }
        } catch (error) {
            showError('Network error. Please try again.');
        } finally {
            submitBtn.disabled = false;
            buttonText.style.display = 'inline';
            buttonSpinner.style.display = 'none';
        }
    });

    function showError(message) {
        const errorDiv = document.getElementById('edit-error');
        errorDiv.textContent = message;
        errorDiv.style.display = 'block';
        setTimeout(() => errorDiv.style.display = 'none', 5000);
    }

    function showSuccess(message) {
        const successDiv = document.getElementById('edit-success');
        successDiv.textContent = message;
        successDiv.style.display = 'block';
        setTimeout(() => successDiv.style.display = 'none', 5000);
    }
});
</script>
