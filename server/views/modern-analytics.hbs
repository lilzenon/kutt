<!-- Analytics Dashboard -->
<div class="space-y-6">
    <!-- Header -->
    <div class="md:flex md:items-center md:justify-between">
        <div class="flex-1 min-w-0">
            <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
                Analytics
            </h2>
            <p class="mt-1 text-sm text-gray-500">
                Track your drops and links performance with detailed insights.
            </p>
        </div>
        <div class="mt-4 flex space-x-3 md:mt-0 md:ml-4">
            <button onclick="refreshAnalytics()" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                <svg class="-ml-1 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
                Refresh
            </button>
            <button onclick="exportData()" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                <svg class="-ml-1 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                Export Data
            </button>
        </div>
    </div>

    <!-- Overview Stats -->
    <div class="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-5">
        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-primary-500 rounded-md flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                            </svg>
                        </div>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Total Drops</dt>
                            <dd class="text-lg font-medium text-gray-900">{{stats.totalDrops}}</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-green-500 rounded-md flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </div>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Active Drops</dt>
                            <dd class="text-lg font-medium text-gray-900">{{stats.activeDrops}}</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" />
                            </svg>
                        </div>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Total Links</dt>
                            <dd class="text-lg font-medium text-gray-900">{{stats.totalLinks}}</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                            </svg>
                        </div>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Total Fans</dt>
                            <dd class="text-lg font-medium text-gray-900">{{stats.totalFans}}</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-orange-500 rounded-md flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                            </svg>
                        </div>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Total Clicks</dt>
                            <dd class="text-lg font-medium text-gray-900">{{stats.totalClicks}}</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Performance Chart -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Performance Overview</h3>
                <div class="h-64 flex items-center justify-center bg-gray-50 rounded-lg">
                    <div class="text-center">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2-2V7a2 2 0 012-2h2a2 2 0 002 2v2a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 00-2 2h-2a2 2 0 00-2 2v6a2 2 0 01-2 2H9z" />
                        </svg>
                        <p class="mt-2 text-sm text-gray-500">Chart visualization coming soon</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Top Performing Content -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Top Performing</h3>
                
                <!-- Top Drops -->
                <div class="mb-6">
                    <h4 class="text-sm font-medium text-gray-700 mb-3">Top Drops</h4>
                    {{#if recentDrops.length}}
                    <div class="space-y-3">
                        {{#each recentDrops}}
                        <div class="flex items-center justify-between">
                            <div class="flex-1 min-w-0">
                                <p class="text-sm font-medium text-gray-900 truncate">{{this.title}}</p>
                                <p class="text-sm text-gray-500">{{this.signup_count}} fans</p>
                            </div>
                            <div class="flex-shrink-0">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{#if this.is_active}}bg-green-100 text-green-800{{else}}bg-gray-100 text-gray-800{{/if}}">
                                    {{#if this.is_active}}Active{{else}}Inactive{{/if}}
                                </span>
                            </div>
                        </div>
                        {{/each}}
                    </div>
                    {{else}}
                    <p class="text-sm text-gray-500">No drops yet</p>
                    {{/if}}
                </div>

                <!-- Top Links -->
                <div>
                    <h4 class="text-sm font-medium text-gray-700 mb-3">Top Links</h4>
                    {{#if recentLinks.length}}
                    <div class="space-y-3">
                        {{#each recentLinks}}
                        <div class="flex items-center justify-between">
                            <div class="flex-1 min-w-0">
                                <p class="text-sm font-medium text-gray-900 truncate">{{this.title}}</p>
                                <p class="text-sm text-gray-500">{{this.visit_count}} clicks</p>
                            </div>
                            <div class="flex-shrink-0">
                                <a href="{{this.short_url}}" target="_blank" class="text-primary-600 hover:text-primary-500">
                                    <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                                    </svg>
                                </a>
                            </div>
                        </div>
                        {{/each}}
                    </div>
                    {{else}}
                    <p class="text-sm text-gray-500">No links yet</p>
                    {{/if}}
                </div>
            </div>
        </div>
    </div>

    <!-- Detailed Analytics Tables -->
    <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg leading-6 font-medium text-gray-900">Detailed Analytics</h3>
                <div class="flex space-x-2">
                    <button onclick="showDropsAnalytics()" id="dropsTab" class="px-3 py-2 text-sm font-medium text-primary-600 bg-primary-50 rounded-md">
                        Drops
                    </button>
                    <button onclick="showLinksAnalytics()" id="linksTab" class="px-3 py-2 text-sm font-medium text-gray-500 bg-gray-100 rounded-md">
                        Links
                    </button>
                    <button onclick="showFansAnalytics()" id="fansTab" class="px-3 py-2 text-sm font-medium text-gray-500 bg-gray-100 rounded-md">
                        Recent Fan Signups
                    </button>
                </div>
            </div>

            <!-- Drops Analytics Table -->
            <div id="dropsAnalytics" class="block">
                {{#if recentDrops.length}}
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Drop</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fans</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            {{#each recentDrops}}
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900">{{this.title}}</div>
                                    <div class="text-sm text-gray-500">{{this.description}}</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{#if this.is_active}}bg-green-100 text-green-800{{else}}bg-gray-100 text-gray-800{{/if}}">
                                        {{#if this.is_active}}Active{{else}}Inactive{{/if}}
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{{this.signup_count}}</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{formatDate this.created_at "MMM dd, yyyy"}}</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <a href="/drops/{{this.id}}/edit" class="text-primary-600 hover:text-primary-900">Edit</a>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
                {{else}}
                <div class="text-center py-8">
                    <p class="text-sm text-gray-500">No drops data available</p>
                </div>
                {{/if}}
            </div>

            <!-- Links Analytics Table -->
            <div id="linksAnalytics" class="hidden">
                {{#if recentLinks.length}}
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Link</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Short URL</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Clicks</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            {{#each recentLinks}}
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900">{{this.title}}</div>
                                    <div class="text-sm text-gray-500 truncate max-w-xs">{{this.target}}</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-primary-600 font-mono">{{this.short_url}}</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{{this.visit_count}}</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{formatDate this.created_at "MMM dd, yyyy"}}</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <a href="{{this.short_url}}" target="_blank" class="text-primary-600 hover:text-primary-900">Visit</a>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
                {{else}}
                <div class="text-center py-8">
                    <p class="text-sm text-gray-500">No links data available</p>
                </div>
                {{/if}}
            </div>

            <!-- Fan Signups Analytics Table -->
            <div id="fansAnalytics" class="hidden">
                <div class="mb-4 flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0">
                    <div>
                        <h4 class="text-sm font-medium text-gray-900">Fan Signups</h4>
                        <p class="text-sm text-gray-500">Search and explore your fan signups</p>
                    </div>
                    <div class="flex items-center space-x-3">
                        <button onclick="refreshFanSignups()" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                            <svg class="-ml-0.5 mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                            </svg>
                            Refresh
                        </button>
                    </div>
                </div>

                <!-- Search Interface -->
                <div class="mb-6 bg-gray-50 rounded-lg p-4">
                    <div class="flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4">
                        <!-- Search Input -->
                        <div class="flex-1 relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                </svg>
                            </div>
                            <input
                                type="text"
                                id="fanSearchInput"
                                class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-primary-500 focus:border-primary-500 sm:text-sm"
                                placeholder="Search fans by email, name, phone, or drop title..."
                                autocomplete="off"
                            >
                            <!-- Search Suggestions Dropdown -->
                            <div id="searchSuggestions" class="absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm hidden">
                                <!-- Suggestions will be populated here -->
                            </div>
                        </div>

                        <!-- Sort Options -->
                        <div class="flex items-center space-x-2">
                            <label for="sortBy" class="text-sm font-medium text-gray-700">Sort:</label>
                            <select id="sortBy" class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md">
                                <option value="latest">Latest First</option>
                                <option value="oldest">Oldest First</option>
                                <option value="email">Email A-Z</option>
                                <option value="name">Name A-Z</option>
                            </select>
                        </div>

                        <!-- Clear Search -->
                        <button
                            id="clearSearchBtn"
                            onclick="clearFanSearch()"
                            class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 hidden"
                        >
                            <svg class="-ml-0.5 mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                            Clear
                        </button>
                    </div>

                    <!-- Search Status -->
                    <div id="searchStatus" class="mt-3 text-sm text-gray-600 hidden">
                        <!-- Search status will be shown here -->
                    </div>
                </div>

                <div id="fanSignupsContainer">
                    <div class="text-center py-8">
                        <div class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-sm shadow rounded-md text-gray-500 bg-white">
                            <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                            Loading fan signups...
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Analytics JavaScript -->
<script>
function showDropsAnalytics() {
    document.getElementById('dropsAnalytics').classList.remove('hidden');
    document.getElementById('linksAnalytics').classList.add('hidden');
    document.getElementById('fansAnalytics').classList.add('hidden');

    setActiveTab('dropsTab');
}

function showLinksAnalytics() {
    document.getElementById('dropsAnalytics').classList.add('hidden');
    document.getElementById('linksAnalytics').classList.remove('hidden');
    document.getElementById('fansAnalytics').classList.add('hidden');

    setActiveTab('linksTab');
}

function showFansAnalytics() {
    document.getElementById('dropsAnalytics').classList.add('hidden');
    document.getElementById('linksAnalytics').classList.add('hidden');
    document.getElementById('fansAnalytics').classList.remove('hidden');

    setActiveTab('fansTab');
    loadFanSignups();
}

function setActiveTab(activeTabId) {
    const tabs = ['dropsTab', 'linksTab', 'fansTab'];
    tabs.forEach(tabId => {
        const tab = document.getElementById(tabId);
        if (tabId === activeTabId) {
            tab.classList.add('text-primary-600', 'bg-primary-50');
            tab.classList.remove('text-gray-500', 'bg-gray-100');
        } else {
            tab.classList.add('text-gray-500', 'bg-gray-100');
            tab.classList.remove('text-primary-600', 'bg-primary-50');
        }
    });
}

// Refresh analytics data
async function refreshAnalytics() {
    try {
        showToast('Refreshing analytics data...', 'info');

        // Invalidate cache first
        await fetch('/api/analytics/invalidate', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        // Reload the page to get fresh data
        window.location.reload();
    } catch (error) {
        console.error('Error refreshing analytics:', error);
        showToast('Failed to refresh analytics data', 'error');
    }
}

function exportData() {
    // Use the new analytics export API
    window.open('/api/analytics/export?format=json', '_blank');
    showToast('Analytics data export started!', 'success');
}

// Toast notification system
function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `fixed top-4 right-4 px-4 py-2 rounded-md shadow-lg z-50 text-white transition-opacity duration-300 ${getToastColor(type)}`;
    toast.textContent = message;

    document.body.appendChild(toast);

    // Fade out after 3 seconds
    setTimeout(() => {
        toast.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(toast)) {
                document.body.removeChild(toast);
            }
        }, 300);
    }, 3000);
}

function getToastColor(type) {
    switch (type) {
        case 'success': return 'bg-green-500';
        case 'error': return 'bg-red-500';
        case 'warning': return 'bg-yellow-500';
        case 'info':
        default: return 'bg-blue-500';
    }
}

// Real-time analytics updates
let realTimeInterval;

function startRealTimeUpdates() {
    // Update real-time stats every 30 seconds
    realTimeInterval = setInterval(async () => {
        try {
            const response = await fetch('/api/analytics/realtime');
            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    updateRealTimeStats(result.data);
                }
            }
        } catch (error) {
            console.error('Error fetching real-time stats:', error);
        }
    }, 30000);
}

function stopRealTimeUpdates() {
    if (realTimeInterval) {
        clearInterval(realTimeInterval);
        realTimeInterval = null;
    }
}

function updateRealTimeStats(stats) {
    // Update any real-time indicators on the page
    const indicators = document.querySelectorAll('[data-realtime]');
    indicators.forEach(indicator => {
        const metric = indicator.dataset.realtime;
        if (stats[metric] !== undefined) {
            indicator.textContent = stats[metric];
            // Add a subtle animation to show the update
            indicator.classList.add('animate-pulse');
            setTimeout(() => {
                indicator.classList.remove('animate-pulse');
            }, 1000);
        }
    });
}

// Initialize real-time updates when page loads
document.addEventListener('DOMContentLoaded', function() {
    startRealTimeUpdates();
});

// Clean up when page unloads
window.addEventListener('beforeunload', function() {
    stopRealTimeUpdates();
});

// Fan Signups functionality
async function loadFanSignups() {
    // Initialize search functionality first
    const searchInput = document.getElementById('fanSearchInput');
    if (searchInput && !searchInput.hasAttribute('data-initialized')) {
        initializeFanSearch();
        searchInput.setAttribute('data-initialized', 'true');
        console.log('🔍 Search functionality initialized');
    }

    // Use search API to load all fan signups
    await performFanSearch('');
}

// Legacy function - now using search-based rendering

// Legacy functions - now using search-based rendering

function refreshFanSignups() {
    loadFanSignups();
    showToast('Fan signups refreshed!', 'success');
}

// Toast notification function
function showToast(message, type) {
    const toast = document.createElement('div');
    toast.className = `fixed top-4 right-4 px-4 py-2 rounded-md shadow-lg z-50 ${
        type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
    }`;
    toast.textContent = message;
    document.body.appendChild(toast);

    setTimeout(() => {
        if (document.body.contains(toast)) {
            document.body.removeChild(toast);
        }
    }, 3000);
}

// Fan Search functionality
let searchTimeout;
let currentSearchQuery = '';

// Initialize search functionality
function initializeFanSearch() {
    const searchInput = document.getElementById('fanSearchInput');
    const sortSelect = document.getElementById('sortBy');
    const suggestionsContainer = document.getElementById('searchSuggestions');

    if (!searchInput) return;

    // Debounced search
    searchInput.addEventListener('input', (e) => {
        const query = e.target.value.trim();

        if (searchTimeout) clearTimeout(searchTimeout);

        const clearBtn = document.getElementById('clearSearchBtn');
        if (query) {
            clearBtn.classList.remove('hidden');
        } else {
            clearBtn.classList.add('hidden');
        }

        searchTimeout = setTimeout(() => {
            if (query !== currentSearchQuery) {
                currentSearchQuery = query;
                performFanSearch(query);
            }
        }, 300);

        if (query.length >= 2) {
            showSearchSuggestions(query);
        } else {
            hideSuggestions();
        }
    });

    if (sortSelect) {
        sortSelect.addEventListener('change', () => {
            performFanSearch(currentSearchQuery);
        });
    }

    searchInput.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            clearFanSearch();
        } else if (e.key === 'Enter') {
            e.preventDefault();
            hideSuggestions();
            performFanSearch(searchInput.value.trim());
        }
    });

    document.addEventListener('click', (e) => {
        if (!searchInput.contains(e.target) && !suggestionsContainer.contains(e.target)) {
            hideSuggestions();
        }
    });
}

// Perform fan search
async function performFanSearch(query = '') {
    try {
        const sortBy = document.getElementById('sortBy')?.value || 'latest';
        const statusElement = document.getElementById('searchStatus');
        const container = document.getElementById('fanSignupsContainer');

        showSearchLoading();

        const params = new URLSearchParams({
            q: query,
            sortBy: sortBy,
            limit: 50,
            highlights: 'true'
        });

        console.log(`🔍 Performing search with query: "${query}"`);
        const response = await fetch(`/api/analytics/search/fans?${params}`);

        if (!response.ok) {
            throw new Error(`Search request failed: ${response.status} ${response.statusText}`);
        }

        const result = await response.json();
        console.log('🔍 Search result:', result);

        if (!result.success) {
            throw new Error(result.error || 'Search failed');
        }

        const resultCount = result.data.total;
        if (query && statusElement) {
            statusElement.innerHTML = `Found ${resultCount} result${resultCount !== 1 ? 's' : ''} for "${query}"`;
            statusElement.classList.remove('hidden');
        } else if (statusElement) {
            statusElement.classList.add('hidden');
        }

        renderFanSearchResults(result.data);

    } catch (error) {
        console.error('❌ Error performing fan search:', error);
        showSearchError(error.message);
    }
}

// Show search suggestions
async function showSearchSuggestions(query) {
    try {
        const response = await fetch(`/api/analytics/search/suggestions?q=${encodeURIComponent(query)}&type=fans`);
        if (!response.ok) return;

        const result = await response.json();
        if (!result.success || !result.data.suggestions.length) {
            hideSuggestions();
            return;
        }

        const suggestionsContainer = document.getElementById('searchSuggestions');
        if (!suggestionsContainer) return;

        let suggestionsHTML = '';
        result.data.suggestions.forEach(suggestion => {
            const icon = suggestion.type === 'email' ? '📧' : suggestion.type === 'name' ? '👤' : '📱';
            suggestionsHTML += `
                <div class="cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-primary-50" onclick="selectSuggestion('${suggestion.value.replace(/'/g, "\\'")}')">
                    <div class="flex items-center">
                        <span class="mr-2">${icon}</span>
                        <span class="font-normal block truncate">${suggestion.value}</span>
                    </div>
                </div>
            `;
        });

        suggestionsContainer.innerHTML = suggestionsHTML;
        suggestionsContainer.classList.remove('hidden');

    } catch (error) {
        console.error('❌ Error loading suggestions:', error);
        hideSuggestions();
    }
}

function selectSuggestion(value) {
    const searchInput = document.getElementById('fanSearchInput');
    if (searchInput) {
        searchInput.value = value;
        hideSuggestions();
        performFanSearch(value);
    }
}

function hideSuggestions() {
    const suggestionsContainer = document.getElementById('searchSuggestions');
    if (suggestionsContainer) {
        suggestionsContainer.classList.add('hidden');
    }
}

function clearFanSearch() {
    const searchInput = document.getElementById('fanSearchInput');
    const clearBtn = document.getElementById('clearSearchBtn');
    const statusElement = document.getElementById('searchStatus');

    if (searchInput) searchInput.value = '';
    if (clearBtn) clearBtn.classList.add('hidden');
    if (statusElement) statusElement.classList.add('hidden');

    currentSearchQuery = '';
    hideSuggestions();
    loadFanSignups();
}

function showSearchLoading() {
    const container = document.getElementById('fanSignupsContainer');
    if (container) {
        container.innerHTML = `
            <div class="text-center py-8">
                <div class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-sm shadow rounded-md text-gray-500 bg-white">
                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Searching...
                </div>
            </div>
        `;
    }
}

function showSearchError(message) {
    const container = document.getElementById('fanSignupsContainer');
    if (container) {
        container.innerHTML = `
            <div class="text-center py-8">
                <svg class="mx-auto h-12 w-12 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">Search Error</h3>
                <p class="mt-1 text-sm text-gray-500">${message}</p>
                <button onclick="performFanSearch(currentSearchQuery)" class="mt-3 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700">
                    Try Again
                </button>
            </div>
        `;
    }
}

function renderFanSearchResults(searchData) {
    const container = document.getElementById('fanSignupsContainer');
    if (!container) return;

    if (!searchData.results || searchData.results.length === 0) {
        container.innerHTML = `
            <div class="text-center py-8">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No results found</h3>
                <p class="mt-1 text-sm text-gray-500">Try adjusting your search terms.</p>
            </div>
        `;
        return;
    }

    let tableHTML = `
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fan</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Drop</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Signed Up</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Source</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
    `;

    searchData.results.forEach(fan => {
        const signupDate = new Date(fan.created_at).toLocaleDateString('en-US', {
            year: 'numeric', month: 'short', day: 'numeric'
        });

        const displayEmail = fan.highlights?.email || fan.email || 'No email';
        const displayName = fan.highlights?.name || fan.name || 'Anonymous';
        const displayDropTitle = fan.highlights?.drop_title || fan.drop_title;

        tableHTML += `
            <tr class="hover:bg-gray-50">
                <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                        <div class="flex-shrink-0 h-10 w-10">
                            <div class="h-10 w-10 rounded-full bg-primary-100 flex items-center justify-center">
                                <span class="text-sm font-medium text-primary-700">${(fan.name || fan.email || 'F').charAt(0).toUpperCase()}</span>
                            </div>
                        </div>
                        <div class="ml-4">
                            <div class="text-sm font-medium text-gray-900">${displayName}</div>
                            <div class="text-sm text-gray-500">${displayEmail}</div>
                            ${fan.phone ? `<div class="text-sm text-gray-500">${fan.phone}</div>` : ''}
                        </div>
                    </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">${displayDropTitle}</div>
                    <div class="text-sm text-gray-500">${fan.drop_slug}</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${signupDate}</td>
                <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                        ${fan.referrer || 'Direct'}
                    </span>
                </td>
            </tr>
        `;
    });

    tableHTML += `</tbody></table></div>`;

    if (searchData.total > searchData.results.length) {
        tableHTML += `
            <div class="bg-white px-4 py-3 border-t border-gray-200">
                <p class="text-sm text-gray-700">
                    Showing <span class="font-medium">1</span> to <span class="font-medium">${searchData.results.length}</span> of <span class="font-medium">${searchData.total}</span> results
                </p>
            </div>
        `;
    }

    container.innerHTML = tableHTML;
}

// Search functionality is now integrated into loadFanSignups

</script>

<style>
.animate-fadeIn {
    animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Mobile responsive adjustments for fan signups table */
@media (max-width: 768px) {
    .fan-signups-table th:nth-child(2),
    .fan-signups-table td:nth-child(2),
    .fan-signups-table th:nth-child(4),
    .fan-signups-table td:nth-child(4) {
        display: none;
    }
}
</style>
